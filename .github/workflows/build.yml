# name: Build Go Universal Binary for macOS

# 作成されるアプリケーション
# Build_App/FolderWebSarver

# .github/workflows/build.yml
name: Build Go Binaries (Debug)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest   # ← macOS ランナーで実行 (lipo 使うため)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'


      - name: Build binaries
        run: |
          mkdir -p Project/Build_App
          cd Project
          GOOS=darwin GOARCH=amd64 go build -o Build_App/AABBCC-amd64
          GOOS=darwin GOARCH=arm64 go build -o Build_App/AABBCC-arm64
          lipo -create -output Build_App/AABBCC Build_App/AABBCC-amd64 Build_App/AABBCC-arm64
          ls -lh Build_App



      # - name: Build binaries
      #   run: |
      #     mkdir -p Project/Build_App
      #     GOOS=darwin GOARCH=amd64 go build -o Project/Build_App/AABBCC-amd64 ./Project
      #     GOOS=darwin GOARCH=arm64 go build -o Project/Build_App/AABBCC-arm64 ./Project
      #     lipo -create -output Project/Build_App/AABBCC Project/Build_App/AABBCC-amd64 Project/Build_App/AABBCC-arm64
      #     ls -lh Project/Build_App


      # - name: Build amd64
      #   run: |
      #     mkdir -p Project/Build_App
      #     GOOS=darwin GOARCH=amd64 go build -v -o Project/Build_App/AABBCC-amd64 ./Project/main.go
      #     echo "=== after amd64 build ==="
      #     ls -lh Project/Build_App
      #     file Project/Build_App/AABBCC-amd64

      # - name: Build arm64
      #   run: |
      #     GOOS=darwin GOARCH=arm64 go build -v -o Project/Build_App/AABBCC-arm64 ./Project/main.go
      #     echo "=== after arm64 build ==="
      #     ls -lh Project/Build_App
      #     file Project/Build_App/AABBCC-arm64
