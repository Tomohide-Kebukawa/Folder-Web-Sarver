# name: Build Go Universal Binary for macOS

# 作成されるアプリケーション
# Build_App/FolderWebSarver

# .github/workflows/build.yml

name: Build Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # runs-on: ubuntu-latest # ビルドを実行する環境はLinux
    runs-on: macos-latest # ビルドを実行する環境はlipo使うのでmacOS
    
    steps:
    # リポジトリのチェックアウト
    - name: Checkout repository
      uses: actions/checkout@v4

    # Go のセットアップ
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.1

    # ビルド
    - name: Build macOS universal binary
      run: |
        cd Project                         # go.mod があるディレクトリに移動
        # mkdir -p ../Build_App

        # amd64 ビルド
        GOOS=darwin GOARCH=amd64 go build -o ../Build_App/AABBCC-amd64

        # arm64 ビルド
        GOOS=darwin GOARCH=arm64 go build -o ../Build_App/AABBCC-arm64

        # lipo でユニバーサルバイナリ作成
        lipo -create -output ../Build_App/AABBCC ../Build_App/AABBCC-amd64 ../Build_App/AABBCC-arm64

        # 出力確認
        ls -lh ../Build_App

      # - name: Build binaries
      #   run: |
      #     cd Project   # go.mod があるディレクトリ
      #     # mkdir -p ../Build_App
      #     GOOS=darwin GOARCH=amd64 go build -o ../Build_App/AABBCC-amd64 main.go
      #     GOOS=darwin GOARCH=arm64 go build -o ../Build_App/AABBCC-arm64 main.go
      #     lipo -create -output ../Build_App/AABBCC ../Build_App/AABBCC-amd64 ../Build_App/AABBCC-arm64

      # - name: Build binaries
      #   run: |
      #     mkdir -p Project/Build_App
      #     cd Project
      #     GOOS=darwin GOARCH=amd64 go build -o Build_App/AABBCC-amd64
      #     GOOS=darwin GOARCH=arm64 go build -o Build_App/AABBCC-arm64
      #     lipo -create -output Build_App/AABBCC Build_App/AABBCC-amd64 Build_App/AABBCC-arm64
      #     ls -lh Build_App



      # - name: Build binaries
      #   run: |
      #     mkdir -p Project/Build_App
      #     GOOS=darwin GOARCH=amd64 go build -o Project/Build_App/AABBCC-amd64 ./Project
      #     GOOS=darwin GOARCH=arm64 go build -o Project/Build_App/AABBCC-arm64 ./Project
      #     lipo -create -output Project/Build_App/AABBCC Project/Build_App/AABBCC-amd64 Project/Build_App/AABBCC-arm64
      #     ls -lh Project/Build_App


      # - name: Build amd64
      #   run: |
      #     mkdir -p Project/Build_App
      #     GOOS=darwin GOARCH=amd64 go build -v -o Project/Build_App/AABBCC-amd64 ./Project/main.go
      #     echo "=== after amd64 build ==="
      #     ls -lh Project/Build_App
      #     file Project/Build_App/AABBCC-amd64

      # - name: Build arm64
      #   run: |
      #     GOOS=darwin GOARCH=arm64 go build -v -o Project/Build_App/AABBCC-arm64 ./Project/main.go
      #     echo "=== after arm64 build ==="
      #     ls -lh Project/Build_App
      #     file Project/Build_App/AABBCC-arm64
